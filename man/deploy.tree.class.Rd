% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deploy_class_tree.R, R/deploy_randomForest.R,
%   R/deploy_trees.R
\name{deploy.tree.class}
\alias{deploy.tree.class}
\title{Deploy (rpart) Tree models on Jaqpot}
\usage{
deploy.tree.class(object)

deploy.tree.class(object)

deploy.tree.class(object)
}
\arguments{
\item{object}{An object of either class "" (base function \code{tree()}) or "tree"
(base function \code{tree()})}
}
\value{
The id of the uploaded model

The id of the uploaded model

The id of the uploaded model
}
\description{
Uploads trained classification tree model on Jaqpot given
a "tree" object.

Uploads trained rpart tree model on Jaqpot given
a "tree" object.

Uploads trained rpart tree model on Jaqpot given
a "tree" object.
}
\details{
The user can upload on Jaqpot a model that has been trained using the base
 function \code{tree()}. The data used for training are deleted before the
 model is uploaded on the platform. Apart from the model object, the user is requested
 to provide further information (e.g. Jaqpot API key or credentials, model title, short
 description etc.) via prompt messages. If the upload process is successful,
 the user is given a unique model id key.

The user can upload on Jaqpot a model that has been trained using the base
 function \code{tree()}. The data used for training are deleted before the
 model is uploaded on the platform. Apart from the model object, the user is requested
 to provide further information (e.g. Jaqpot API key or credentials, model title, short
 description etc.) via prompt messages. If the upload process is successful,
 the user is given a unique model id key.

The user can upload on Jaqpot a model that has been trained using the base
 function \code{tree()}. The data used for training are deleted before the
 model is uploaded on the platform. Apart from the model object, the user is requested
 to provide further information (e.g. Jaqpot API key or credentials, model title, short
 description etc.) via prompt messages. If the upload process is successful,
 the user is given a unique model id key.
}
\examples{
 tree.model <- tree(y~x, data=df)
 deploy.tree(tree.model)


 tree.model <- tree(y~x, data=df)
 deploy.tree(tree.model)


 tree.model <- tree(y~x, data=df)
 deploy.tree(tree.model)


}
